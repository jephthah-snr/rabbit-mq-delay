"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResponseHelper = void 0;
var status = require("http-status");
var errors_1 = require("../errors");
var ResponseHelper = /** @class */ (function () {
    function ResponseHelper() {
    }
    ResponseHelper.handleErrors = function (error) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;
        var statusCode = (_a = error.response) === null || _a === void 0 ? void 0 : _a.status;
        switch (statusCode) {
            case status.BAD_REQUEST:
                throw new errors_1.BadRequestException((_c = (_b = error.response) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.message, statusCode);
            case status.UNAUTHORIZED:
                throw new errors_1.UnauthorizedException((_e = (_d = error === null || error === void 0 ? void 0 : error.response) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message, statusCode);
            case status.FORBIDDEN:
                throw new errors_1.ForbiddenException((_g = (_f = error === null || error === void 0 ? void 0 : error.response) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.message, statusCode);
            case status.NOT_FOUND:
                throw new errors_1.NotFoundException((_j = (_h = error === null || error === void 0 ? void 0 : error.response) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.message, statusCode);
            case status.TOO_MANY_REQUESTS:
                throw new errors_1.TooManyRequestException((_l = (_k = error === null || error === void 0 ? void 0 : error.response) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.message, statusCode);
            default:
                throw new errors_1.ServerException((_o = (_m = error === null || error === void 0 ? void 0 : error.response) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.message, statusCode);
        }
    };
    return ResponseHelper;
}());
exports.ResponseHelper = ResponseHelper;
