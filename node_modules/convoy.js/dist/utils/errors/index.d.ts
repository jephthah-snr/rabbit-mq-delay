declare class BaseError extends Error {
    statusCode: number;
    constructor(message?: string, status?: number);
}
declare class BadRequestException extends BaseError {
    constructor(message?: string, statusCode?: number);
}
declare class UnauthorizedException extends BaseError {
    constructor(message?: string, statusCode?: number);
}
declare class ForbiddenException extends BaseError {
    constructor(message?: string, statusCode?: number);
}
declare class NotFoundException extends BaseError {
    constructor(message?: string, statusCode?: number);
}
declare class TooManyRequestException extends BaseError {
    constructor(message?: string, statusCode?: number);
}
declare class ServerException extends BaseError {
    constructor(message?: string, statusCode?: number);
}
declare class WebhookVerificationException extends BaseError {
    constructor(message: string);
}
declare class ConfigException extends BaseError {
    constructor(message: string);
}
export { BadRequestException, UnauthorizedException, ForbiddenException, NotFoundException, TooManyRequestException, ServerException, WebhookVerificationException, ConfigException, };
