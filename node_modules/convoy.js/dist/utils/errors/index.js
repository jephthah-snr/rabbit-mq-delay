"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigException = exports.WebhookVerificationException = exports.ServerException = exports.TooManyRequestException = exports.NotFoundException = exports.ForbiddenException = exports.UnauthorizedException = exports.BadRequestException = void 0;
var httpStatus = require("http-status");
var BaseError = /** @class */ (function (_super) {
    __extends(BaseError, _super);
    function BaseError(message, status) {
        var _this = _super.call(this) || this;
        Error.captureStackTrace(_this, _this.constructor);
        _this.name = _this.constructor.name;
        _this.message = message;
        _this.statusCode = status;
        return _this;
    }
    return BaseError;
}(Error));
var BadRequestException = /** @class */ (function (_super) {
    __extends(BadRequestException, _super);
    function BadRequestException(message, statusCode) {
        message = message || httpStatus[httpStatus.BAD_REQUEST];
        return _super.call(this, message, statusCode) || this;
    }
    return BadRequestException;
}(BaseError));
exports.BadRequestException = BadRequestException;
var UnauthorizedException = /** @class */ (function (_super) {
    __extends(UnauthorizedException, _super);
    function UnauthorizedException(message, statusCode) {
        message = message || httpStatus[httpStatus.UNAUTHORIZED];
        return _super.call(this, message, statusCode) || this;
    }
    return UnauthorizedException;
}(BaseError));
exports.UnauthorizedException = UnauthorizedException;
var ForbiddenException = /** @class */ (function (_super) {
    __extends(ForbiddenException, _super);
    function ForbiddenException(message, statusCode) {
        message = message || httpStatus[httpStatus.FORBIDDEN];
        return _super.call(this, message, statusCode) || this;
    }
    return ForbiddenException;
}(BaseError));
exports.ForbiddenException = ForbiddenException;
var NotFoundException = /** @class */ (function (_super) {
    __extends(NotFoundException, _super);
    function NotFoundException(message, statusCode) {
        message = message || httpStatus[httpStatus.NOT_FOUND];
        return _super.call(this, message, statusCode) || this;
    }
    return NotFoundException;
}(BaseError));
exports.NotFoundException = NotFoundException;
var TooManyRequestException = /** @class */ (function (_super) {
    __extends(TooManyRequestException, _super);
    function TooManyRequestException(message, statusCode) {
        message = message || httpStatus[httpStatus.TOO_MANY_REQUESTS];
        return _super.call(this, message, statusCode) || this;
    }
    return TooManyRequestException;
}(BaseError));
exports.TooManyRequestException = TooManyRequestException;
var ServerException = /** @class */ (function (_super) {
    __extends(ServerException, _super);
    function ServerException(message, statusCode) {
        message = message || httpStatus[httpStatus.INTERNAL_SERVER_ERROR];
        return _super.call(this, message, statusCode) || this;
    }
    return ServerException;
}(BaseError));
exports.ServerException = ServerException;
var WebhookVerificationException = /** @class */ (function (_super) {
    __extends(WebhookVerificationException, _super);
    function WebhookVerificationException(message) {
        return _super.call(this, message) || this;
    }
    return WebhookVerificationException;
}(BaseError));
exports.WebhookVerificationException = WebhookVerificationException;
var ConfigException = /** @class */ (function (_super) {
    __extends(ConfigException, _super);
    function ConfigException(message) {
        return _super.call(this, message) || this;
    }
    return ConfigException;
}(BaseError));
exports.ConfigException = ConfigException;
